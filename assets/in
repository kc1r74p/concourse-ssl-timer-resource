#!/bin/bash
set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

# for jq
PATH=/usr/local/bin:$PATH

payload=$TMPDIR/ssl-resource
cat > $payload <&0
dns=$(jq -r '.source.dns // ""' < $payload)
days_left=$(jq -r '.version.days_left // "HEAD"' < $payload)

certificate_file=$(mktemp)
echo -n | openssl s_client -servername "$dns" -connect "$dns":443 2>/dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > $certificate_file


info=$(certtool -i < $certificate_file | egrep "^\s+Subject:")
CN=$(echo "$info" | grep -o "CN=.*" | cut -d'=' -f2- | cut -d',' -f1 )
O=$(echo "$info" | grep -o "O=.*" | cut -d'=' -f2- | cut -d',' -f1 )
L=$(echo "$info" | grep -o "L=.*" | cut -d'=' -f2- | cut -d',' -f1 )
ST=$(echo "$info" | grep -o "ST=.*" | cut -d'=' -f2- | cut -d',' -f1 )
C=$(echo "$info" | grep -o "C=.*" | cut -d'=' -f2- | cut -d',' -f1 )

ver=$( jq -n \
                --arg dl "$days_left" \
                --arg CN "$CN" \
                --arg O "$O" \
                --arg L "$L" \
                --arg ST "$ST" \
                --arg C "$C" \
                '{days_left: $dl, metadata: [ {name: CN, value: $CN}, {name: O, value: $O}, {name: L, value: $L}, {name: ST, value: $ST}, {name: C, value: $C} ] }' )

trap "unlink $certificate_file" EXIT
echo $ver >&3
